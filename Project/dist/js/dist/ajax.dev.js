"use strict";function ajax(t){if("[object Object]"!=Object.prototype.toString.call(t))throw Error("ajax函数的参数必须是一个对象");if(!t.url||!t.success)throw Error("url 和success 属性是必填的");if("[object Function]"!=Object.prototype.toString.call(t.success))throw Error("success属性的属性值必须是一个函数");if(t.async&&"[object Boolean]"!=Object.prototype.toString.call(t.async))throw Error("async 的取值必须是布尔值");var e={url:t.url,type:t.type||"get",async:0!=t.async||t.async,data:t.data||"",success:t.success,error:t.error||function(){}};if("get"!=e.type&&"post"!=e.type)throw Error("type属性的取值暂时只支持get 和post");if("[object String]"!=Object.prototype.toString.call(e.data)&&"[object Object]"!=Object.prototype.toString.call(e.data))throw Error("data属性的值 只支持字符串或者 对象");if("[object Object]"==Object.prototype.toString.call(e.data)){var r="";for(var o in e.data)r+=o+"="+e.data[o]+"&";e.data=r.substr(0,r.length-1)}var s=new XMLHttpRequest;"get"==e.type?(s.open(e.type,e.url+"?"+e.data,e.async),s.send()):(s.open(e.type,e.url,e.async),s.setRequestHeader("Content-type","application/x-www-form-urlencoded"),s.send(e.data)),0==e.async&&(/^[23]\d{2}$/.test(s.status)?e.success(s.responseText):e.error(s.responseText)),s.onload=function(){/^[23]\d{2}$/.test(s.status)?e.success(s.responseText):e.error(s.responseText)}}function pAjax(t){return new Promise(function(e,r){ajax({url:t.url,type:t.type,data:t.data,async:t.async,success:function(t){e(t)},error:function(t){r(t)}})})}